<?xml version="1.0"?>

 <!-- <!DOCTYPE html [
<!ENTITY % xhtml-lat1.ent    SYSTEM "http://helm.cs.unibo.it/dtd/xhtml-lat1.ent">
<!ENTITY % xhtml-special.ent SYSTEM "http://helm.cs.unibo.it/dtd/xhtml-special.ent">
<!ENTITY % xhtml-symbol.ent  SYSTEM "http://helm.cs.unibo.it/dtd/xhtml-symbol.ent">

%xhtml-lat1.ent;
%xhtml-special.ent;
%xhtml-symbol.ent;
]> -->


 <html xmlns="http://www.w3.org/1999/xhtml" xmlns:ht="http://www.cs.unibo.it/helm/namespaces/helm-theory" xmlns:helm="http://www.cs.unibo.it/helm">

 <head></head>
<body>

 <ht:TYPESYSTEM impredicative_set="false" check_guarded="true" check_universes="true"/>


<br/>
The type <span class="inlinecode"><span class="id" title="var">nat</span></span> of Peano natural numbers (built from <span class="inlinecode"><span class="id" title="var">O</span></span> and <span class="inlinecode"><span class="id" title="var">S</span></span>)
    is defined in <span class="inlinecode"><span class="id" title="var">Datatypes.v</span></span> 
<div class="paragraph"> </div>

 This module defines the following operations on natural numbers :
<ul class="doclist">
<li> predecessor <span class="inlinecode"><span class="id" title="var">pred</span></span>

</li>
<li> addition <span class="inlinecode"><span class="id" title="var">plus</span></span>

</li>
<li> multiplication <span class="inlinecode"><span class="id" title="var">mult</span></span>

</li>
<li> less or equal order <span class="inlinecode"><span class="id" title="var">le</span></span>

</li>
<li> less <span class="inlinecode"><span class="id" title="var">lt</span></span>

</li>
<li> greater or equal <span class="inlinecode"><span class="id" title="var">ge</span></span>

</li>
<li> greater <span class="inlinecode"><span class="id" title="var">gt</span></span>

</li>
</ul>

<div class="paragraph"> </div>

   It states various lemmas and theorems about natural numbers,
   including Peano's axioms of arithmetic (in Coq, these are provable).
   Case analysis on <span class="inlinecode"><span class="id" title="var">nat</span></span> and induction on <span class="inlinecode"><span class="id" title="var">nat</span></span> <span class="inlinecode">*</span> <span class="inlinecode"><span class="id" title="var">nat</span></span> are provided too
  <ht:REQUIRE uri="cic:/Coq/Init/Notations"/>
 <ht:REQUIRE uri="cic:/Coq/Init/Datatypes"/>
 <ht:REQUIRE uri="cic:/Coq/Init/Logic"/>
 <ht:REQUIRE uri="cic:/Coq/Init/Nat"/>
 <ht:DEFINITION uri="cic:/Coq/Init/Peano/eq_S.con" as="Definition" line="36"/>

 <ht:DEFINITION uri="cic:/Coq/Init/Peano/f_equal_nat.con" as="Definition" line="37"/>

 The predecessor function  <ht:DEFINITION uri="cic:/Coq/Init/Peano/f_equal_pred.con" as="Definition" line="45"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/pred_Sn.con" as="Theorem" line="50"/>

 Injectivity of successor  <ht:DEFINITION uri="cic:/Coq/Init/Peano/eq_add_S.con" as="Definition" line="54"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/not_eq_S.con" as="Theorem" line="60"/>

 <ht:DEFINITION uri="cic:/Coq/Init/Peano/IsSucc.con" as="Definition" line="63"/>

 Zero is not the successor of a number  <ht:THEOREM uri="cic:/Coq/Init/Peano/O_S.con" as="Theorem" line="74"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/n_Sn.con" as="Theorem" line="80"/>

 Addition  <ht:DEFINITION uri="cic:/Coq/Init/Peano/f_equal2_plus.con" as="Definition" line="88"/>

 <ht:DEFINITION uri="cic:/Coq/Init/Peano/f_equal2_nat.con" as="Definition" line="89"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/plus_n_O.con" as="Lemma" line="95"/>

<ht:THEOREM uri="cic:/Coq/Init/Peano/plus_O_n.con" as="Lemma" line="103"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/plus_n_Sm.con" as="Lemma" line="108"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/plus_Sn_m.con" as="Lemma" line="114"/>

 Standard associated names  Multiplication  <ht:DEFINITION uri="cic:/Coq/Init/Peano/f_equal2_mult.con" as="Definition" line="126"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/mult_n_O.con" as="Lemma" line="132"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/mult_n_Sm.con" as="Lemma" line="140"/>

 Standard associated names  Truncated subtraction: <span class="inlinecode"><span class="id" title="var">m</span>-<span class="id" title="var">n</span></span> is <span class="inlinecode">0</span> if <span class="inlinecode"><span class="id" title="var">n</span>&gt;=<span class="id" title="var">m</span></span>  Definition of the usual orders, the basic properties of <span class="inlinecode"><span class="id" title="var">le</span></span> and <span class="inlinecode"><span class="id" title="var">lt</span></span>
    can be found in files Le and Lt  <ht:DEFINITION uri="cic:/Coq/Init/Peano/le.ind" as="Inductive" line="156"/>

 <ht:DEFINITION uri="cic:/Coq/Init/Peano/le_ind.con" as="Scheme" line="156"/>

<ht:DEFINITION uri="cic:/Coq/Init/Peano/lt.con" as="Definition" line="165"/>

 <ht:DEFINITION uri="cic:/Coq/Init/Peano/ge.con" as="Definition" line="170"/>

 <ht:DEFINITION uri="cic:/Coq/Init/Peano/gt.con" as="Definition" line="175"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/le_pred.con" as="Theorem" line="188"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/le_S_n.con" as="Theorem" line="193"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/le_0_n.con" as="Theorem" line="198"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/le_n_S.con" as="Theorem" line="203"/>

 Case analysis  <ht:THEOREM uri="cic:/Coq/Init/Peano/nat_case.con" as="Theorem" line="211"/>

 Principle of double induction  <ht:THEOREM uri="cic:/Coq/Init/Peano/nat_double_ind.con" as="Theorem" line="223"/>

 Maximum and minimum : definitions and specifications  <ht:THEOREM uri="cic:/Coq/Init/Peano/max_l.con" as="Lemma" line="235"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/max_r.con" as="Lemma" line="242"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/min_l.con" as="Lemma" line="249"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/min_r.con" as="Lemma" line="256"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/nat_rect_succ_r.con" as="Lemma" line="263"/>

 <ht:THEOREM uri="cic:/Coq/Init/Peano/nat_rect_plus.con" as="Theorem" line="271"/>

 </body>
</html>

